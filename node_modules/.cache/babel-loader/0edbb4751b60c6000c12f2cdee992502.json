{"ast":null,"code":"var _jsxFileName = \"/home/ilia/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B-\\u043A\\u043E\\u0434\\u0434\\u0438\\u043D\\u0433/\\u0444\\u0430\\u0439\\u043B\\u044B \\u0436\\u0441/client/src/pages/createPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { ModalWindow } from '../component/modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreatePage = () => {\n  _s();\n\n  const [form, setForm] = useState({\n    username: '',\n    email: '',\n    text: ''\n  });\n  const [errorUsername, setErrorUsername] = useState(false);\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [errorText, setErrorText] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const blurHadler = event => {\n    switch (event.target.name) {\n      case 'username':\n        if (!form.username) {\n          setErrorUsername(true);\n        }\n\n        break;\n\n      case 'email':\n        if (!form.email) {\n          setErrorEmail(true);\n        }\n\n        break;\n\n      case 'text':\n        if (!form.text) {\n          setErrorText(true);\n        }\n\n        break;\n\n      default:\n        setErrorText(false);\n        setErrorEmail(false);\n        setErrorUsername(false);\n    }\n  };\n\n  const pressHandler = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"username\", form.username);\n      formData.append(\"email\", form.email);\n      formData.append(\"text\", form.text);\n      await axios({\n        url: 'https://uxcandy.com/~shapoval/test-task-backend/v2/create?developer=ilia',\n        crossDomain: true,\n        method: 'POST',\n        mimeType: \"multipart/form-data\",\n        contentType: false,\n        processData: false,\n        data: formData,\n        dataType: \"json\"\n      }).then(() => {\n        setShow(true);\n      });\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      paddingTop: 100,\n      maxWidth: 500,\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      message: 'Задача была успешно создана'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exampleFormControlInput2\",\n        className: \"form-label\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: blurHadler,\n        type: \"text\",\n        className: \"form-control\",\n        name: \"username\",\n        id: \"exampleFormControlInput2\",\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), errorUsername && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"usernameHelp\",\n        className: \"form-text red\",\n        children: \"\\u041F\\u043E\\u043B\\u0435 \\u0441 \\u0438\\u043C\\u0435\\u043D\\u0435\\u043C \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exampleFormControlInput1\",\n        className: \"form-label\",\n        children: \"Email \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onBlur: blurHadler,\n        type: \"email\",\n        className: \"form-control\",\n        name: \"email\",\n        id: \"exampleFormControlInput1\",\n        placeholder: \"name@example.com\",\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), errorEmail && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailHelp\",\n        className: \"form-text red\",\n        children: \"\\u041F\\u043E\\u043B\\u0435 \\u0441 email \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exampleFormControlTextarea1\",\n        className: \"form-label\",\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onBlur: blurHadler,\n        className: \"form-control\",\n        name: \"text\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"3\",\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), errorText && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"usernameHelp\",\n        className: \"form-text red\",\n        children: \"\\u041D\\u0443\\u0436\\u043D\\u043E \\u043D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u0442\\u0435\\u043A\\u0441\\u0442 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438 \\u0434\\u043B\\u044F \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-100 btn btn-lg btn-primary\",\n      disabled: !form.username || !form.text || !form.email,\n      onClick: pressHandler,\n      type: \"button\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePage, \"HiBnyTwYJjp5PnXVAIQBYJr4izM=\");\n\n_c = CreatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"sources":["/home/ilia/Проекты-коддинг/файлы жс/client/src/pages/createPage.js"],"names":["useState","axios","ModalWindow","CreatePage","form","setForm","username","email","text","errorUsername","setErrorUsername","errorEmail","setErrorEmail","errorText","setErrorText","show","setShow","changeHandler","event","target","name","value","blurHadler","pressHandler","formData","FormData","append","url","crossDomain","method","mimeType","contentType","processData","data","dataType","then","e","paddingTop","maxWidth","margin"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport axios from 'axios'\nimport {ModalWindow} from '../component/modal'\n\n\nexport const CreatePage = () => {\n\n    const [form, setForm] = useState({\n        username: '', email: '', text: ''\n    })\n\n\n    const [errorUsername, setErrorUsername] = useState(false)\n    const [errorEmail, setErrorEmail] = useState(false)\n    const [errorText, setErrorText] = useState(false)\n    const [show, setShow] = useState(false)\n    const changeHandler = (event) => {\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    const blurHadler = (event) => {\n        switch(event.target.name){\n            case 'username':\n                if(!form.username){\n                    setErrorUsername(true)\n                }\n                \n                break\n            case 'email':\n                if(!form.email){\n                    setErrorEmail(true)\n                }\n                break\n            case 'text':\n                if(!form.text){\n                    setErrorText(true)\n                }\n                break\n            default:\n                setErrorText(false)\n                setErrorEmail(false)\n                setErrorUsername(false)\n\n        }\n    }\n\n    const pressHandler = async () => {\n        try{\n\n            const formData = new FormData();\n                formData.append(\"username\", form.username);\n                formData.append(\"email\", form.email);\n                formData.append(\"text\", form.text);\n\n            await axios({\n                url: 'https://uxcandy.com/~shapoval/test-task-backend/v2/create?developer=ilia',\n                crossDomain: true,\n                    method: 'POST',\n                    mimeType: \"multipart/form-data\",\n                    contentType: false,\n                    processData: false,\n                    data: formData,\n                    dataType: \"json\",\n            }).then(() => {\n                setShow(true)\n            })\n            \n            \n        }catch(e){}\n    }\n\n    \n\n    return (\n        <form style={{paddingTop: 100, maxWidth: 500, margin: 'auto'}} >\n            <Modal \n            show={show}\n            message={'Задача была успешно создана'}\n            />\n            <div className=\"mb-3\">\n                <label htmlFor=\"exampleFormControlInput2\" className=\"form-label\">Username</label>\n                <input onBlur={blurHadler} type=\"text\" className=\"form-control\" name='username' id=\"exampleFormControlInput2\" onChange={changeHandler} />\n                {errorUsername && <div id=\"usernameHelp\" className=\"form-text red\">Поле с именем должно быть обязательно заполнено</div>}\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email </label>\n                <input onBlur={blurHadler} type=\"email\" className=\"form-control\" name='email' id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" onChange={changeHandler}/>\n                {errorEmail && <div id=\"emailHelp\" className=\"form-text red\">Поле с email должно быть обязательно заполнено</div>}\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Text</label>\n                <textarea onBlur={blurHadler} className=\"form-control\" name='text' id=\"exampleFormControlTextarea1\" rows=\"3\" onChange={changeHandler}/>\n                {errorText && <div id=\"usernameHelp\" className=\"form-text red\">Нужно написать текст задачи для добавления</div>}\n            </div>\n            <button className=\"w-100 btn btn-lg btn-primary\" disabled={!form.username || !form.text || !form.email} onClick={pressHandler} type='button'>Sign in</button>\n        </form>\n    )\n}    "]},"metadata":{},"sourceType":"module"}