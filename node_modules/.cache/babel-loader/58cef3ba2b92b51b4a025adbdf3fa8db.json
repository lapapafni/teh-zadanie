{"ast":null,"code":"var _jsxFileName = \"/home/ilia/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B-\\u043A\\u043E\\u0434\\u0434\\u0438\\u043D\\u0433/\\u0444\\u0430\\u0439\\u043B\\u044B \\u0436\\u0441/client/src/pages/tasksPage.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AuthContext } from \"../context/authContext\";\nimport { Paginate } from \"../component/paginate\";\nimport { Filter } from \"../component/filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TasksPage = () => {\n  _s();\n\n  const [tasksData, setTasksData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [numTasks, setNumTasks] = useState(0);\n  const [page, setPage] = useState(1);\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [sortField, setSortField] = useState('');\n  const {\n    token\n  } = useContext(AuthContext);\n\n  const filterTasks = event => {\n    switch (event.target.name) {\n      case 'sortDirection':\n        if (event.target.checked) {\n          localStorage.setItem(event.target.name, event.target.checked);\n          setSortDirection('desc');\n        } else {\n          localStorage.removeItem(event.target.name);\n          setSortDirection('asc');\n        }\n\n        break;\n\n      case 'sortFieldId':\n        if (event.target.checked) {\n          localStorage.setItem(event.target.name, event.target.checked);\n          setSortField('id');\n        } else {\n          localStorage.removeItem(event.target.name);\n          setSortField('');\n        }\n\n        break;\n\n      case 'sortFieldUsername':\n        if (event.target.checked) {\n          localStorage.setItem(event.target.name, event.target.checked);\n          setSortField('username');\n        } else {\n          localStorage.removeItem(event.target.name);\n          setSortField('');\n        }\n\n        break;\n\n      case 'sortFieldEmail':\n        if (event.target.checked) {\n          localStorage.setItem(event.target.name, event.target.checked);\n          setSortField('email');\n        } else {\n          localStorage.removeItem(event.target.name);\n          setSortField('');\n        }\n\n        break;\n\n      case 'sortFieldStatus':\n        if (event.target.checked) {\n          localStorage.setItem(event.target.name, event.target.checked);\n          setSortField('status');\n        } else {\n          localStorage.removeItem(event.target.name);\n          setSortField('');\n        }\n\n        break;\n\n      default:\n    }\n  };\n\n  const getTask = useCallback(async () => {\n    try {\n      setLoading(true);\n      await axios.get(`https://uxcandy.com/~shapoval/test-task-backend/v2/?developer=ilia&page=${page}&sort_direction=${sortDirection}&sort_field=${sortField}`).then(response => {\n        setLoading(false);\n        setTasksData(response.data.message.tasks);\n        setNumTasks(response.data.message.total_task_count);\n      }, [page, sortDirection, sortFieldId, sortFieldUsername, sortFieldEmail, sortFieldStatus]);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [page, sortDirection, sortFieldId, sortFieldUsername, sortFieldEmail, sortFieldStatus]);\n\n  const nextPage = () => setPage(prev => prev + 1);\n\n  const previewPage = () => setPage(prev => prev - 1);\n\n  useEffect(() => {\n    getTask();\n  }, [getTask]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (tasksData.length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: 10,\n          width: 700\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0417\\u0430\\u0434\\u0430\\u0447\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), tasksData.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            marginTop: 10\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: task.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"card-subtitle mb-2 text-muted\",\n              children: task.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"card-subtitle mb-2 text-muted\",\n              children: [\"\\u0421\\u0442\\u0430\\u0441\\u0442\\u0443\\u0441: \", task.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: task.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 23\n            }, this), !!token && /*#__PURE__*/_jsxDEV(Link, {\n              className: \"btn btn-primary\",\n              to: `/edit/${task.id}`,\n              style: {\n                position: 'absolute',\n                right: 20,\n                top: 50\n              },\n              children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 20\n        }, this)), /*#__PURE__*/_jsxDEV(Paginate, {\n          page: page,\n          numTasks: numTasks,\n          nextButton: nextPage,\n          previewButton: previewPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filterTasks: filterTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0434\\u0430\\u0447 \\u043D\\u0435\\u0442, \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 12\n  }, this);\n};\n\n_s(TasksPage, \"kpF+6G4HD5DbaBGynBQjwW3CppE=\");\n\n_c = TasksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"sources":["/home/ilia/Проекты-коддинг/файлы жс/client/src/pages/tasksPage.js"],"names":["axios","useState","useCallback","useEffect","Link","useContext","AuthContext","Paginate","Filter","TasksPage","tasksData","setTasksData","loading","setLoading","numTasks","setNumTasks","page","setPage","sortDirection","setSortDirection","sortField","setSortField","token","filterTasks","event","target","name","checked","localStorage","setItem","removeItem","getTask","get","then","response","data","message","tasks","total_task_count","sortFieldId","sortFieldUsername","sortFieldEmail","sortFieldStatus","e","console","log","nextPage","prev","previewPage","length","paddingTop","width","map","task","marginTop","username","email","status","text","id","position","right","top"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {useState, useCallback, useEffect} from \"react\"\nimport {Link} from 'react-router-dom'\nimport {useContext} from 'react'\nimport {AuthContext} from \"../context/authContext\"\nimport {Paginate} from \"../component/paginate\"\nimport {Filter} from \"../component/filter\"\n\nexport const TasksPage = () => {\n    const [tasksData, setTasksData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [numTasks, setNumTasks] = useState(0)\n    const [page, setPage] = useState(1) \n    const [sortDirection, setSortDirection] = useState('asc')\n    const [sortField, setSortField] = useState('')\n    \n\n    const {token} = useContext(AuthContext)\n    \n\n    const filterTasks = (event) => {\n\n        switch(event.target.name){\n            case 'sortDirection':\n                if(event.target.checked){\n                    localStorage.setItem(event.target.name, event.target.checked)\n                    setSortDirection('desc')\n                }else{\n                    localStorage.removeItem(event.target.name)\n                    setSortDirection('asc')\n                }\n                break\n\n            case 'sortFieldId':\n                if(event.target.checked){\n                    localStorage.setItem(event.target.name, event.target.checked)\n                    setSortField('id')\n                    \n                }else{\n                    localStorage.removeItem(event.target.name)\n                    setSortField('')\n                }\n                break\n                \n            case 'sortFieldUsername':\n                if(event.target.checked){\n                    localStorage.setItem(event.target.name, event.target.checked)\n                    setSortField('username')\n\n                }else{\n                    localStorage.removeItem(event.target.name)\n                    setSortField('')\n\n                }\n                break\n            case 'sortFieldEmail':\n                if(event.target.checked){\n                    localStorage.setItem(event.target.name, event.target.checked)\n                    setSortField('email')\n\n                }else{\n                    localStorage.removeItem(event.target.name)\n                    setSortField('')\n\n                }\n                break\n            case 'sortFieldStatus':\n                if(event.target.checked){\n                    localStorage.setItem(event.target.name, event.target.checked)\n                    setSortField('status')\n\n                }else{\n                    localStorage.removeItem(event.target.name)\n                    setSortField('')\n\n                }\n                break\n            default:\n\n        }\n    }\n\n    const getTask = useCallback(async () => {\n        try{\n            setLoading(true)\n            await axios.get(\n                `https://uxcandy.com/~shapoval/test-task-backend/v2/?developer=ilia&page=${page}&sort_direction=${sortDirection}&sort_field=${sortField}`\n                ).then((response) => {\n                    setLoading(false)\n                    setTasksData(response.data.message.tasks)\n                    setNumTasks(response.data.message.total_task_count)\n                    \n                }, [page, sortDirection,sortFieldId, sortFieldUsername, sortFieldEmail, sortFieldStatus])  \n\n        }catch(e){console.log(e)}\n\n    }, [page, sortDirection,sortFieldId, sortFieldUsername, sortFieldEmail, sortFieldStatus])\n\n    const nextPage = () => setPage(prev => prev+1)\n    const previewPage = () => setPage(prev => prev-1)\n\n\n    useEffect(() => {\n        getTask()\n    }, [getTask])\n\n\n    if(loading){\n        return <progress />\n    }\n\n\n    if(tasksData.length){\n\n        return (\n            <>\n            <div style={{paddingTop: 10, width: 700}}>\n                <h1>Задачи</h1>\n                {tasksData.map((task) => \n                   <div className=\"card\" style={{marginTop: 10}} key={task.id}>\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">{task.username}</h5>\n                      <h6 className=\"card-subtitle mb-2 text-muted\">{task.email}</h6>\n                      <h6 className=\"card-subtitle mb-2 text-muted\">Стастус: {task.status}</h6>\n                      <p className=\"card-text\">{task.text}</p>\n                      {!!token && <Link className='btn btn-primary' to={`/edit/${task.id}`} style={{position: 'absolute', right:20, top:50}}>Редактировать</Link>}\n                    </div>\n                  </div>\n                )}\n                <Paginate\n                page={page}\n                numTasks={numTasks}\n                nextButton={nextPage}\n                previewButton={previewPage}\n                />\n            </div>\n            <Filter \n            filterTasks={filterTasks}\n            /></>\n        )\n    }\n    \n    return <p>Задач нет, добавляйте</p>\n}\n        \n"]},"metadata":{},"sourceType":"module"}