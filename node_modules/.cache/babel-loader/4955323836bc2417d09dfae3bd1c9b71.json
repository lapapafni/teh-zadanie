{"ast":null,"code":"var _jsxFileName = \"/home/ilia/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B-\\u043A\\u043E\\u0434\\u0434\\u0438\\u043D\\u0433/\\u0444\\u0430\\u0439\\u043B\\u044B \\u0436\\u0441/\\u0442\\u0435\\u0445-\\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435/client/src/pages/tasksPage.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useCallback, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TasksPage = () => {\n  _s();\n\n  const [tasksData, setTasksData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [numTasks, setNumTasks] = useState(0);\n  const [page, setPage] = useState(1);\n  const getTask = useCallback(async () => {\n    try {\n      setLoading(true);\n      await axios.get(`/api/tasks/?page=${page}`).then(response => {\n        setLoading(false);\n        setTasksData(response.data.message.tasks);\n      }, [page]);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [page]); //  const nextPage = () => setPage(prev => prev+1)\n  //const previewPage = () => setPage(prev => prev-1)\n\n  useEffect(() => {\n    getTask();\n  }, [getTask]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"progress\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (tasksData.length) {\n    return tasksData.map(task => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: task.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0417\\u0430\\u0434\\u0430\\u0447 \\u043D\\u0435\\u0442, \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u044F\\u0439\\u0442\\u0435\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n};\n\n_s(TasksPage, \"x6cr5OOZsdzCKnffOCq8Z14gp5I=\");\n\n_c = TasksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"sources":["/home/ilia/Проекты-коддинг/файлы жс/тех-задание/client/src/pages/tasksPage.js"],"names":["axios","useState","useCallback","useEffect","TasksPage","tasksData","setTasksData","loading","setLoading","numTasks","setNumTasks","page","setPage","getTask","get","then","response","data","message","tasks","e","console","log","length","map","task","username"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,SAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAMY,OAAO,GAAGX,WAAW,CAAC,YAAY;AACpC,QAAG;AACCM,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMR,KAAK,CAACc,GAAN,CACD,oBAAmBH,IAAK,EADvB,EAEAI,IAFA,CAEMC,QAAD,IAAc;AACjBR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,YAAY,CAACU,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsBC,KAAvB,CAAZ;AAEH,OANC,EAMC,CAACR,IAAD,CAND,CAAN;AAQH,KAVD,CAUC,OAAMS,CAAN,EAAQ;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAAe;AAE5B,GAb0B,EAaxB,CAACT,IAAD,CAbwB,CAA3B,CAN2B,CAqB3B;AACA;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAKA,MAAGN,OAAH,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,MAAGF,SAAS,CAACkB,MAAb,EAAoB;AAEhB,WACIlB,SAAS,CAACmB,GAAV,CAAeC,IAAD,IAAU;AACpB,0BACI;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,CADJ;AAOH;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA9CM;;GAAMtB,S;;KAAAA,S","sourcesContent":["import axios from 'axios'\nimport {useState, useCallback, useEffect} from \"react\"\n\nexport const TasksPage = () => {\n    const [tasksData, setTasksData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [numTasks, setNumTasks] = useState(0)\n    const [page, setPage] = useState(1)\n\n    const getTask = useCallback(async () => {\n        try{\n            setLoading(true)\n            await axios.get(\n                `/api/tasks/?page=${page}`\n                ).then((response) => {\n                    setLoading(false)\n                    setTasksData(response.data.message.tasks)\n                    \n                }, [page])  \n\n        }catch(e){console.log(e)}\n\n    }, [page])\n\n    //  const nextPage = () => setPage(prev => prev+1)\n    //const previewPage = () => setPage(prev => prev-1)\n\n    useEffect(() => {\n        getTask()\n    }, [getTask])\n\n\n    if(loading){\n        return <progress />\n    }\n\n\n    if(tasksData.length){\n\n        return (\n            tasksData.map((task) => {\n                return (\n                    <h1>{task.username}</h1>\n                )\n            })\n        )\n    }\n    \n    return <p>Задач нет, добавляйте</p>\n}\n        \n"]},"metadata":{},"sourceType":"module"}