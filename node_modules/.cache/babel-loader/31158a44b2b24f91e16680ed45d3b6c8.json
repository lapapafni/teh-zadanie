{"ast":null,"code":"var _jsxFileName = \"/home/ilia/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B-\\u043A\\u043E\\u0434\\u0434\\u0438\\u043D\\u0433/\\u0444\\u0430\\u0439\\u043B\\u044B \\u0436\\u0441/client/src/component/modal.js\",\n    _s = $RefreshSig$();\n\nimport { Modal } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModalWindow = data => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  if (data.message) {\n    setShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: /*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 1\n  }, this);\n};\n\n_s(ModalWindow, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = ModalWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalWindow\");","map":{"version":3,"sources":["/home/ilia/Проекты-коддинг/файлы жс/client/src/component/modal.js"],"names":["Modal","useState","ModalWindow","data","show","setShow","handleClose","message"],"mappings":";;;AAAA,SAAQA,KAAR,QAAoB,iBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAGA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAAA;;AAEjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMK,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AAEA,MAAGF,IAAI,CAACI,OAAR,EAAgB;AACZF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AAGD,sBACJ,QAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,MAAM,EAAEE,WAA3B;AAAA,2BACQ,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,gBACKH,IAAI,CAACI;AADV;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,UADI;AAQH,CAlBM;;GAAML,W;;KAAAA,W","sourcesContent":["import {Modal} from \"react-bootstrap\"\nimport {useState} from \"react\"\n\n\nexport const ModalWindow = (data) => {\n\n    const [show, setShow] = useState(false)\n    const handleClose = () => setShow(false)\n\n    if(data.message){\n        setShow(true)\n    }\n\n\n    return (\n<Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n            {data.message}\n        </Modal.Header>\n</Modal>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}