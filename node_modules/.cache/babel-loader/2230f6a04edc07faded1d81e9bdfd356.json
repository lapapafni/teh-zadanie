{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useCallback, useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TasksPage = () => {\n  _s();\n\n  const [tasksData, setTasksData] = useState([]); //const [loading, setLoading] = useState(false)\n\n  const getTask = useCallback(async () => {\n    try {\n      //setLoading(true)\n      await axios.get(`/api/tasks/`, {}).then(response => {\n        //setLoading(false)\n        setTasksData(response.data.message);\n      });\n    } catch (e) {}\n  }, []);\n  useEffect(() => {\n    getTask();\n  }, [getTask]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: {\n      tasksData\n    }\n  }, void 0, false);\n};\n\n_s(TasksPage, \"tJ3Q4gWAT7Lz/ugu79RHDTz37qU=\");\n\n_c = TasksPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksPage\");","map":{"version":3,"sources":["/home/ilia/Проекты-коддинг/файлы жс/тех-задание/client/src/pages/tasksPage.js"],"names":["axios","useState","useCallback","useEffect","TasksPage","tasksData","setTasksData","getTask","get","then","response","data","message","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,SAA/B,QAA+C,OAA/C;;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C,CAD2B,CAE3B;;AAEA,QAAMM,OAAO,GAAGL,WAAW,CAAC,YAAY;AACpC,QAAG;AACC;AACA,YAAMF,KAAK,CAACQ,GAAN,CACD,aADC,EAEF,EAFE,EAGAC,IAHA,CAGMC,QAAD,IAAc;AACjB;AACAJ,QAAAA,YAAY,CAACI,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAZ;AACH,OANC,CAAN;AAUH,KAZD,CAYC,OAAMC,CAAN,EAAQ,CAAE;AAEd,GAf0B,EAexB,EAfwB,CAA3B;AAiBAV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO;AACV,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAIA,sBACI;AAAA,cAAG;AAACF,MAAAA;AAAD;AAAH,mBADJ;AAGH,CA5BM;;GAAMD,S;;KAAAA,S","sourcesContent":["import axios from 'axios'\nimport {useState, useCallback, useEffect} from \"react\"\n\nexport const TasksPage = () => {\n    const [tasksData, setTasksData] = useState([])\n    //const [loading, setLoading] = useState(false)\n\n    const getTask = useCallback(async () => {\n        try{\n            //setLoading(true)\n            await axios.get(\n                `/api/tasks/`, \n                {},\n                ).then((response) => {\n                    //setLoading(false)\n                    setTasksData(response.data.message)\n                })  \n                \n\n\n        }catch(e){}\n\n    }, [])\n\n    useEffect(() => {\n        getTask()\n    }, [getTask])\n\n    return (\n        <>{{tasksData}}</>\n    )\n}"]},"metadata":{},"sourceType":"module"}