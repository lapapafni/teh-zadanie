{"ast":null,"code":"var _jsxFileName = \"/home/ilia/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B-\\u043A\\u043E\\u0434\\u0434\\u0438\\u043D\\u0433/\\u0444\\u0430\\u0439\\u043B\\u044B \\u0436\\u0441/client/src/pages/editPage.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { AuthContext } from '../context/authContext';\nimport { ModalWindow } from '../component/modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditPage = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const auth = useContext(AuthContext);\n  const [check, setChecked] = useState(false);\n  const [text, setText] = useState(null);\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState('Задача успешно отредактирована');\n\n  const pressHandler = async () => {\n    const formData = new FormData();\n    formData.append(\"token\", auth.token);\n\n    if (text) {\n      if (check) {\n        formData.append(\"status\", 11);\n        formData.append(\"text\", text);\n      } else {\n        formData.append(\"status\", 1);\n        formData.append(\"text\", text);\n      }\n    } else {\n      if (check) {\n        formData.append(\"status\", 10);\n      } else formData.append(\"status\", 0);\n    }\n\n    await axios({\n      url: `https://uxcandy.com/~shapoval/test-task-backend/v2/edit/${id}?developer=ilia`,\n      crossDomain: true,\n      method: 'POST',\n      mimeType: \"multipart/form-data\",\n      contentType: false,\n      processData: false,\n      data: formData,\n      dataType: \"json\"\n    }).then(() => {\n      setShow(true);\n\n      if (!localStorage.getItem('userData')) {\n        setMessage('Задача не сохранена, войдите на сайт еще раз.');\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      paddingTop: 100,\n      maxWidth: 500,\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ModalWindow, {\n      show: show,\n      message: message,\n      handleClose: () => setShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"form-label\",\n        children: \"Example textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        name: \"text\",\n        id: \"email\",\n        rows: \"3\",\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      checked: check,\n      type: \"checkbox\",\n      onChange: () => setChecked(!check)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), \" \\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0430?\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-100 btn btn-lg btn-primary\",\n      onClick: pressHandler,\n      type: \"button\",\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditPage, \"CceTrfyTRb28jzbvsSN11EAvGcE=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPage\");","map":{"version":3,"sources":["/home/ilia/Проекты-коддинг/файлы жс/client/src/pages/editPage.js"],"names":["axios","useState","useContext","useParams","AuthContext","ModalWindow","EditPage","id","auth","check","setChecked","text","setText","show","setShow","message","setMessage","pressHandler","formData","FormData","append","token","url","crossDomain","method","mimeType","contentType","processData","data","dataType","then","localStorage","getItem","paddingTop","maxWidth","margin","e","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useState, useContext } from 'react'\nimport { useParams } from 'react-router-dom';\nimport {AuthContext} from '../context/authContext'\nimport {ModalWindow} from '../component/modal'\n\nexport const EditPage = () => {\n\n    const {id} = useParams()\n    const auth = useContext(AuthContext)\n    const [check, setChecked] = useState(false)\n    const [text, setText] = useState(null)\n    const [show, setShow] = useState(false)\n    const [message, setMessage] = useState('Задача успешно отредактирована')\n\n    const pressHandler = async () => {\n        const formData = new FormData()\n\n        formData.append(\"token\", auth.token)\n\n        if(text){\n            if(check){\n                formData.append(\"status\", 11)\n                formData.append(\"text\", text)\n            }else{\n                formData.append(\"status\", 1)\n                formData.append(\"text\", text)\n            }\n            \n        }else{\n            if(check){\n                formData.append(\"status\", 10)\n            }else formData.append(\"status\", 0)\n            \n        }\n        \n\n        await axios({\n            url: `https://uxcandy.com/~shapoval/test-task-backend/v2/edit/${id}?developer=ilia`,\n            crossDomain: true,\n                method: 'POST',\n                mimeType: \"multipart/form-data\",\n                contentType: false,\n                processData: false,\n                data: formData,\n                dataType: \"json\",\n        })\n        .then(() => {\n            setShow(true)\n            if(!localStorage.getItem('userData')){\n                setMessage('Задача не сохранена, войдите на сайт еще раз.')\n            }\n        })\n    }\n\n    return (\n\n        <form style={{paddingTop: 100, maxWidth: 500, margin: 'auto'}} >\n            <ModalWindow \n            show={show}\n            message={message}\n            handleClose={() => setShow(false)}\n            />\n            <div className=\"mb-3\">\n                <label htmlFor=\"email\" className=\"form-label\">Example textarea</label>\n                <textarea className=\"form-control\" name='text' id=\"email\" rows=\"3\" onChange={(e) => setText(e.target.value)}/>\n            </div>\n            <input checked={check} type='checkbox' onChange={() => setChecked(!check)}/> Выполнена?\n            <button className=\"w-100 btn btn-lg btn-primary\" onClick={pressHandler} type='button'>Sign in</button>\n        </form>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}